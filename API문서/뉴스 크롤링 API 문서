## 데이터 수집 API

| 기능명          | 담당자   | 구현 여부 | 유형   | URL                  | 설명                                                                 | 파라미터명     | 파라미터 설명                              | 예시                        |
|----------------|---------|----------|-------|----------------------|--------------------------------------------------------------------|----------------|-----------------------------------------|-----------------------------|
| 데이터 수집    | 홍길동   | 완료     | GET   | /api/news/collect    | NewsCompany 테이블의 신문사 정보를 기반으로 뉴스 데이터를 수집합니다. | url            | 수집할 뉴스의 웹사이트 주소입니다.         | `https://example.com/news`  |
|                |         |          |       |                      |                                                                    | code           | 신문사를 식별하기 위한 고유 코드입니다.   | `NYT`, `BBC`                |
|                |         |          |       |                      |                                                                    | is_active      | 수집 활성화 여부를 나타냅니다.            | `true` (활성화), `false` (비활성화) |                  

### 기능: 데이터 수집
- **담당자**: 홍길동
- **구현 여부**: 완료
- **유형**: GET
- **URL**: `/api/news/collect`
- **설명**: NewsCompany 테이블의 신문사 정보를 기반으로 뉴스 데이터를 수집합니다.

#### 입력 파라미터
- **url**: 크롤링 대상 URL
  - **설명**: 수집할 뉴스의 웹사이트 주소입니다.
  - **예시**: `https://example.com/news`
  - **제약 조건**: 최대 2048자, 필수

- **code**: 신문사 구분 코드
  - **설명**: 신문사를 식별하기 위한 고유 코드입니다.
  - **예시**: `NYT`, `BBC`
- **제약 조건**: 최대 10자, 필수

- **is_active**: 수집 활성화 여부
  - **설명**: 해당 신문사의 데이터 수집을 활성화할지 여부를 나타냅니다.
  - **예시**: `true` (활성화), `false` (비활성화)
  - **제약 조건**: boolean, 필수

#### 처리
- **Selenium**: 동적 콘텐츠를 수집하기 위해 사용됩니다. 웹 페이지의 자바스크립트 렌더링을 처리할 수 있습니다.
- **BeautifulSoup4**: 수집된 HTML을 파싱하여 원하는 데이터를 추출합니다.
- **에러 처리 및 재시도**: 크롤링 중 에러가 발생할 경우, 재시도 로직을 통해 안정성을 높입니다.

#### 출력
- **Article 테이블에 저장**:
  - **title**: 기사 제목
  - **content**: 본문 내용
  - **url**: 원본 URL
  - **published_at**: 발행일시
  - **category_id**: 카테고리 정보

#### 응답
- **상태 코드**: 200 OK
- **본문**: 수집된 뉴스 데이터의 요약 정보

### 추가 정보
- **에러 코드 및 메시지**:
  - 400 Bad Request: 잘못된 요청 파라미터
  - 401 Unauthorized: 인증 실패
  - 500 Internal Server Error: 서버 내부 오류
- **데이터 형식**: 요청과 응답은 JSON 형식으로 처리됩니다.


## 순위 관리 API

| 기능명          | 담당자   | 구현 여부 | 유형   | URL                  | 설명                                                                 | 파라미터명     | 파라미터 설명                              | 예시                        |
|----------------|---------|----------|-------|----------------------|--------------------------------------------------------------------|----------------|-----------------------------------------|-----------------------------|
| 순위 관리    | 홍길동   | 완료     | POST  | /api/news/rank       | Article 테이블의 기사 정보를 기반으로 순위를 관리합니다.             | published_at   | 기사 발행일시                             | `2023-10-01T12:00:00Z`      |
|                |         |          |       |                      |                                                                    | rank_type      | 순위 유형                                | `daily`, `weekly`      |
|                |         |          |       |                      |                                                                    | rank_position  | 순위 위치                                | `1` ~ `10`            |

### 기능: 순위 관리
- **담당자**: 홍길동
- **구현 여부**: 완료
- **유형**: POST
- **URL**: `/api/news/rank`
- **설명**: Article 테이블의 기사 정보를 기반으로 순위를 관리합니다.

#### 입력 파라미터
- **published_at**: 기사 발행일시
  - **설명**: 순위 계산에 사용할 기사 발행일시입니다.
  - **예시**: `2023-10-01T12:00:00Z`
  - **제약 조건**: ISO 8601 형식, 필수

- **rank_type**: 순위 유형
  - **설명**: 순위 계산에 사용할 순위 유형입니다.
  - **예시**: `daily`, `weekly`
  - **제약 조건**: 최대 10자, 필수

- **rank_position**: 순위 위치
  - **설명**: 순위 계산에 사용할 순위 위치입니다.
  - **예시**: `1` ~ `10`
  - **제약 조건**: 정수, 필수

#### 처리
- **순위 계산 로직**: 주간 및 일간 순위를 계산하여 ArticleRank 테이블에 저장합니다.
  - 일간 순위: 24시간 내 조회수 기준
  - 주간 순위: 7일간 누적 조회수 기준
  - 동일 조회수의 경우 최신 기사 우선
- **에러 처리 및 재시도**: 순위 계산 중 에러가 발생할 경우, 재시도 로직을 통해 안정성을 높입니다.

#### 출력
- **ArticleRank 테이블에 저장**:
  - **rank_type**: daily/weekly
  - **rank_position**: 1~10위
  - **article_id**: 기사 ID

#### 응답
- **상태 코드**: 200 OK
- **본문**: 순위 관리 결과의 요약 정보

### 추가 정보
- **에러 코드 및 메시지**:
  - 400 Bad Request: 잘못된 요청 파라미터
  - 401 Unauthorized: 인증 실패
  - 500 Internal Server Error: 서버 내부 오류
- **데이터 형식**: 요청과 응답은 JSON 형식으로 처리됩니다.


## 로깅 및 모니터링 API

| 기능명          | 담당자   | 구현 여부 | 유형   | URL                  | 설명                                                                 | 파라미터명       | 파라미터 설명                              | 예시                        |
|----------------|---------|----------|-------|----------------------|--------------------------------------------------------------------|------------------|-----------------------------------------|-----------------------------|
| 로깅 및 모니터링 | 홍길동   | 완료     | POST  | /api/news/log        | 크롤링 실행 정보를 기반으로 로깅 및 모니터링을 수행합니다.            | news_company_id  | 신문사 식별자                             | `1`                         |
|                |         |          |       |                      |                                                                    | started_at       | 크롤링 시작 시간                          | `2023-10-01T12:00:00Z`      |

### 기능: 로깅 및 모니터링
- **담당자**: 홍길동
- **구현 여부**: 완료
- **유형**: POST
- **URL**: `/api/news/log`
- **설명**: 크롤링 실행 정보를 기반으로 로깅 및 모니터링을 수행합니다.

#### 입력 파라미터
- **news_company_id**: 신문사 식별자
  - **설명**: 크롤링을 수행한 신문사의 고유 식별자입니다.
  - **예시**: `1`
  - **제약 조건**: 정수, 필수

- **started_at**: 크롤링 시작 시간
  - **설명**: 크롤링이 시작된 시간입니다.
  - **예시**: `2023-10-01T12:00:00Z`
  - **제약 조건**: ISO 8601 형식, 필수

#### 처리
- **크롤링 상태 추적**: 성공/실패 여부, 수집 기사 수, 에러 메시지, 재시도 횟수를 추적합니다.

#### 출력
- **CrawlingLog 테이블에 저장**:
  - **status**: success/failure
  - **articles_count**: 수집 건수
  - **error_message**: 에러 내용
  - **retry_count**: 재시도 수

#### 응답
- **상태 코드**: 200 OK
- **본문**: 로깅 및 모니터링 결과의 요약 정보

### 추가 정보
- **에러 코드 및 메시지**:
  - 400 Bad Request: 잘못된 요청 파라미터
  - 401 Unauthorized: 인증 실패
  - 500 Internal Server Error: 서버 내부 오류
- **데이터 형식**: 요청과 응답은 JSON 형식으로 처리됩니다.
